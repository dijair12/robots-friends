{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","style","width","fontSize","alt","src","CardList","robots","map","user","indice","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"wOAkBeA,EAhBF,SAAC,GAIP,IAHLC,EAGI,EAHJA,GACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,sBAAKC,UAAU,sDAAsDC,MAAO,CAAEC,MAAO,QAASC,SAAU,UAAxG,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BR,EAA1B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCWGO,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEEb,GAAIU,EAAOG,GAAQb,GACnBC,KAAMS,EAAOG,GAAQZ,KACrBC,MAAOQ,EAAOG,GAAQX,OAHjBW,SCIJC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKZ,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVa,KAAK,SACLC,YAAY,eACZC,SAAUH,OCEHI,EARA,SAACC,GACd,OACE,qBAAKhB,MAAO,CAAEiB,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAAtE,SACGH,EAAMI,YCyCEC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAElB,OAAQ2B,S,oBAO3C,WAAU,IAAD,EACyBC,KAAKN,MAA7BtB,EADD,EACCA,OAAQmB,EADT,EACSA,YACVU,EAAiB7B,EAAO8B,QAAO,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASd,EAAYa,kBAEvD,OAAQhC,EAAOkC,OAGb,sBAAKzC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BAEA,cAAC,EAAD,CAAWY,aAAcuB,KAAKZ,iBAE9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAQ6B,SARtB,mD,GAzBYM,cCAlBC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5d3c679.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({\r\n  id,\r\n  name,\r\n  email\r\n}) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S\" style={{ width: '19rem', fontSize: '0.7rem' }}>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, indice) => {\r\n          return (\r\n            <Card\r\n              key={indice}\r\n              id={robots[indice].id}\r\n              name={robots[indice].name}\r\n              email={robots[indice].email}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robot\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border: '1px solid black', height: '70vh' }}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ? (\r\n      <h1>Loading robot</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\" >Robo Friends</h1>\r\n\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}